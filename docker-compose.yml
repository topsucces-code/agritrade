version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:6.0
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: agritrade
      MONGO_INITDB_ROOT_PASSWORD: agritrade123
      MONGO_INITDB_DATABASE: agritrade
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - agritrade-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - agritrade-network
    command: redis-server --appendonly yes

  # AgriTrade Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: 3000
      MONGODB_URI: mongodb://agritrade:agritrade123@mongodb:27017/agritrade
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-jwt-secret-key
      GOOGLE_CLOUD_PROJECT_ID: agritrade-ai
      AWS_REGION: eu-west-1
      AWS_S3_BUCKET: agritrade-dev-images
    ports:
      - "3000:3000"
    volumes:
      - ./backend:/app/backend
      - ./docs:/app/docs
      - /app/node_modules
    depends_on:
      - mongodb
      - redis
    networks:
      - agritrade-network

  # Nginx Reverse Proxy (for production-like setup)
  nginx:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
    networks:
      - agritrade-network

  # ElasticSearch for Analytics (optional)
  elasticsearch:
    image: elasticsearch:8.8.0
    restart: unless-stopped
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - agritrade-network

  # Kibana for Analytics Dashboard (optional)
  kibana:
    image: kibana:8.8.0
    restart: unless-stopped
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - agritrade-network

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local
  elasticsearch_data:
    driver: local

networks:
  agritrade-network:
    driver: bridge